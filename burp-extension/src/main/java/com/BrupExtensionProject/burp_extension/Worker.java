package com.BrupExtensionProject.burp_extension;

import javax.swing.SwingWorker;
import java.util.concurrent.Callable;
import java.util.function.Consumer;

public class Worker<T> extends SwingWorker<T, Void> {
    private Callable<T> task;
    private Consumer<T> onSuccess;
    private Consumer<Exception> onError;

    public Worker(Callable<T> task, Consumer<T> onSuccess, Consumer<Exception> onError) {
        this.task = task;
        this.onSuccess = onSuccess;
        this.onError = onError;
    }

    @Override
    protected T doInBackground() throws Exception {
        return task.call();
    }

    @Override
    protected void done() {
        try {
            T result = get();
            if (onSuccess != null) {
                onSuccess.accept(result);
            }
        } catch (Exception e) {
            if (onError != null) {
                onError.accept(e);
            }
        }
    }
}
